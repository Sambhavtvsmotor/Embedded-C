/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2025 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
    /* Loop forever */
//	Fetching the address from the user manuals and reference manual
	uint32_t *pRCCAHB1 = (uint32_t *)0x40023830;
	uint32_t *pGPIODmode = (uint32_t *)0x40020c00;
	uint32_t *pGPIOoutputdata = (uint32_t *)0x40020c14;

//	1. Enabling the clock for GPIOD peripheral in the ANB1EN
//	*pRCCAHB1 |= 0x08;
	*pRCCAHB1 |= (1 << 3);

//	2.Configure the mode of the IO pin at output
//	a.clear the 24th and 25th bit positions (clear)
//	*pGPIODmode &= 0xFCFFFFFF;
	*pGPIODmode &= (0 << 24);
	*pGPIODmode &= (0 << 25);

//	b.make the 24th bit position as SET(!)
//	*pGPIODmode |= 0x01000000;
	*pGPIODmode |= (1 << 24);

//	3. Set the 12th bit of the Output data as SET(!)
//	*pGPIOoutputdata |= 0x00001000;
	int count = 0;
	int flag = 1;
	while(flag == 1){
		while(count < 11){
			*pGPIOoutputdata |= (1 << 12);
			count++;
		}
		while(count < 21){
			count++;
		}
		count =0;
	}

	for(;;);
}
